@import "helpers";
@import "fonts/clear-sans.css";

$field-width: 500px;
$grid-spacing: 10px;
$grid-row-cells: 8;
$tile-size: ($field-width - $grid-spacing * ($grid-row-cells + 1)) / $grid-row-cells;
$tile-border-radius: 3px;

$mobile-threshold: $field-width + 20px;

$text-color: #776e65;
$bright-text-color: #f9f6f2;

$tile-color: #eee4da;
$dark-highlight-color: sienna;
$light-highlight-color: lighten(sienna, 30%);
$tile-gold-color: #edc22e;
$tile-gold-glow-color: lighten($tile-gold-color, 15%);

$game-container-margin-top: 40px;
$game-container-background: #bbada0;

$piece-sliding-speed: 200ms;

html, body {
  margin: 0;
  padding: 0;

  background: #faf8ef;
  color: $text-color;
  font-family: "Clear Sans", "Helvetica Neue", Arial, sans-serif;
  font-size: 18px;
}

body {
  margin: 20px 0;
}

// Styles for buttons
@mixin button {
  display: inline-block;
  background: darken($game-container-background, 20%);
  border-radius: 3px;
  padding: 0 20px;
  text-decoration: none;
  color: $bright-text-color;
  height: 40px;
  line-height: 42px;
  cursor: pointer;
}

input {
  @include button;
  font: inherit;
  border: none;
  outline: none;
  box-sizing: border-box;
  font-weight: bold;
  margin: 0;
  @include appearance(none);

  &[type="text"], &[type="email"] {
    cursor: auto;
    background: lighten($tile-color, 9%);
    font-weight: normal;
    color: $text-color;

    padding: 0 15px;

    @mixin placeholder {
      color: lighten($text-color, 15%);
    }

    // Included separately so that browsers don't refuse mixed rules
    &::-webkit-input-placeholder {
      @include placeholder;
    }

    &::-moz-placeholder {
      @include placeholder;
    }

    &:-ms-input-placeholder {
      @include placeholder;
    }
  }
}

.heading {
  @include clearfix;
}

h1.title {
  font-size: 80px;
  font-weight: bold;
  margin: 0;
  display: block;
  float: left;
}

@include keyframes(move-up) {
  0% {
    top: 25px;
    opacity: 1;
  }

  100% {
    top: -50px;
    opacity: 0;
  }
}

p {
  margin-top: 0;
  margin-bottom: 10px;
  line-height: 1.65;
}

a {
  color: $text-color;
  font-weight: bold;
  text-decoration: underline;
  cursor: pointer;
}

strong {
  &.important {
    text-transform: uppercase;
  }
}

hr {
  border: none;
  border-bottom: 1px solid lighten($text-color, 40%);
  margin-top: 20px;
  margin-bottom: 30px;
}

.container {
  width: $field-width;
  margin: 0 auto;
}

@include keyframes(fade-in) {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

// Game field mixin used to render CSS at different width
@mixin game-field {
  .game-container {
    margin-top: $game-container-margin-top;
    position: relative;
    padding: $grid-spacing;

    cursor: default;
    -webkit-touch-callout: none;
    -ms-touch-callout: none;

    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;

    -ms-touch-action: none;
    touch-action: none;

    background: $game-container-background;
    border-radius: $tile-border-radius * 2;
    width: $field-width;
    height: $field-width + $tile-size + $grid-spacing;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
  }

  .game-message {
    display: none;

    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background: rgba($tile-color, .73);
    z-index: 100;

    padding-top: 40px; // Pushes content down in desktop version (removed on mobile)

    text-align: center;

    p {
      font-size: 60px;
      font-weight: bold;
      height: 60px;
      line-height: 60px;
      margin-top: 222px;
      // height: $field-width;
      // line-height: $field-width;
    }

    .lower {
      display: block;
      margin-top: 29px;
    }

    a {
      @include button;
      margin-left: 9px;
      // margin-top: 59px;
    }

    @include animation(fade-in 800ms ease 200ms);
    @include animation-fill-mode(both);

    &.game-won {
      background: rgba($tile-gold-color, .5);
      color: $bright-text-color;
      text-shadow: black;
    }

    &.game-won, &.game-lost {
      display: block;

      p {
        margin-top: 25%;
      }
    }
  }

  .grid-container {
    position: absolute;
    z-index: 1;
  }

  .grid-row {
    margin-bottom: $grid-spacing;

    &:last-child {
      margin-bottom: 0;
    }

    &:after {
      content: "";
      display: block;
      clear: both;
    }
  }

  .grid-cell {
    width: $tile-size;
    height: $tile-size;
    margin-right: $grid-spacing;
    float: left;

    border-radius: $tile-border-radius;

    background: rgba($tile-color, .35);

    &:last-child {
      margin-right: 0;
    }
  }

  .grid-suicide-cell {
    width: 8 * $tile-size + 7 * $grid-spacing;
    height: $tile-size;
    float: left;

    border-radius: $tile-border-radius;

    background: rgba($tile-color, .35);
  }

  .tile-container {
    position: absolute;
    z-index: 2;
  }

  .tile {
    &, .tile-inner {
      width: ceil($tile-size);
      height: ceil($tile-size);
      line-height: ceil($tile-size);
      font-size: 30px;
    }

    // Build position classes
    @for $x from 1 through $grid-row-cells {
      @for $y from 1 through $grid-row-cells {
        &.tile-position-#{$x}-#{$y} {
          $xPos: floor(($tile-size + $grid-spacing) * ($x - 1));
          $yPos: floor(($tile-size + $grid-spacing) * ($y - 1));
          @include transform(translate($xPos, $yPos));
        }
      }
    }
  }

  .suicide-tile {
    pointer-events: none;
    border-radius: $tile-border-radius;
    background: $tile-color;
    text-align: center;
    font-weight: bold;
    z-index: 10;
    position: absolute;
    $xPos: 0;
    $yPos: floor(($tile-size + $grid-spacing) * 8);
    @include transform(translate($xPos, $yPos));

    &, .tile-inner {
      width: floor(($tile-size + $grid-spacing) * 7) + ceil($tile-size);
      height: ceil($tile-size);
    }

    &.tile-highlighted-light {
      z-index: 20;
      .tile-inner {
        background: $light-highlight-color;
      }
    }
    &.tile-highlighted-dark {
      z-index: 20;
      .tile-inner {
        background: $dark-highlight-color;
      }
    }
  }
}

// End of game-field mixin
@include game-field;

.tile {
  position: absolute; // Makes transforms relative to the top-left corner
  pointer-events: none;

  // Movement transition
  @include transition($piece-sliding-speed);
  -webkit-transition-property: -webkit-transform;
  -moz-transition-property: -moz-transform;
  transition-property: transform;

  .tile-inner {
    border-radius: $tile-border-radius;

    background: $tile-color;
    text-align: center;
    font-weight: bold;
    z-index: 10;
    pointer-events: none;
  }

  &.tile-highlighted-light {
    z-index: 20;
    .tile-inner {
      background: $light-highlight-color;
    }
  }
  &.tile-highlighted-dark {
    z-index: 20;
    .tile-inner {
      background: $dark-highlight-color;
    }
  }
  &.enemy-stack .tile-inner {
    color: #ffffff;
    background: radial-gradient(circle closest-side, black 0%, black 90%, white 91%, white 97%, black 99%, rgba(0,0,0,0) 100%);
  }
  &.enemy-king .tile-inner {
    color: #ffffff;
    background: radial-gradient(circle closest-side, black 0%, black 90%, red 91%, red 97%, black 99%, rgba(0,0,0,0) 100%);
  }
  &.friendly-stack .tile-inner {
    color: #000000;
    background: radial-gradient(circle closest-side, white 0%, white 90%, black 91%, black 99%, rgba(0,0,0,0) 100%);
  }
  &.friendly-king .tile-inner {
    color: #000000;
    background: radial-gradient(circle closest-side, white 0%, white 90%, red 91%, red 99%, rgba(0,0,0,0) 100%);
  }

  &.enemy-stack.tile-highlighted-dark .tile-inner {
    color: #ffffff;
    background: radial-gradient(circle closest-side, black 0%, black 90%, white 91%, white 97%, black 99%, $dark-highlight-color 100%);
  }
  &.enemy-king.tile-highlighted-dark .tile-inner {
    color: #ffffff;
    background: radial-gradient(circle closest-side, black 0%, black 90%, red 91%, red 97%, black 99%, $dark-highlight-color 100%);
  }
  &.friendly-stack.tile-highlighted-dark .tile-inner {
    color: #000000;
    background: radial-gradient(circle closest-side, white 0%, white 90%, black 91%, black 99%, $dark-highlight-color 100%);
  }
  &.friendly-king.tile-highlighted-dark .tile-inner {
    color: #000000;
    background: radial-gradient(circle closest-side, white 0%, white 90%, red 91%, red 99%, $dark-highlight-color 100%);
  }

  &.enemy-stack.tile-highlighted-light .tile-inner {
    color: #ffffff;
    background: radial-gradient(circle closest-side, black 0%, black 90%, white 91%, white 97%, black 99%, $light-highlight-color 100%);
  }
  &.enemy-king.tile-highlighted-light .tile-inner {
    color: #ffffff;
    background: radial-gradient(circle closest-side, black 0%, black 90%, red 91%, red 97%, black 99%, $light-highlight-color 100%);
  }
  &.friendly-stack.tile-highlighted-light .tile-inner {
    color: #000000;
    background: radial-gradient(circle closest-side, white 0%, white 90%, black 91%, black 99%, $light-highlight-color 100%);
  }
  &.friendly-king.tile-highlighted-light .tile-inner {
    color: #000000;
    background: radial-gradient(circle closest-side, white 0%, white 90%, red 91%, red 99%, $light-highlight-color 100%);
  }
}

.above-game {
  @include clearfix;
}

.game-intro {
  float: left;
  line-height: 42px;
  margin-bottom: 0;
}

.restart-button {
  @include button;
  display: block;
  text-align: center;
  float: right;
}

.game-explanation {
  margin-top: 50px;
}

@include smaller($mobile-threshold) {
  // Redefine variables for smaller screens
  $field-width: 280px !global;
  $grid-spacing: 6px !global;
  $grid-row-cells: 6 !global;
  $tile-size: ($field-width - $grid-spacing * ($grid-row-cells + 1)) / $grid-row-cells !global;
  $tile-border-radius: 3px !global;
  $game-container-margin-top: 17px !global;

  html, body {
    font-size: 15px;
  }

  body {
    margin-top: 0;
    padding: 20px;
  }

  h1.title {
    font-size: 27px;
    margin-top: 15px;
  }

  .container {
    width: $field-width;
    margin: 0 auto;
  }

  .heading {
    margin-bottom: 10px;
  }

  // Show intro and restart button side by side
  .game-intro {
    width: 55%;
    display: block;
    box-sizing: border-box;
    line-height: 1.65;
  }

  .restart-button {
    width: 42%;
    padding: 0;
    display: block;
    box-sizing: border-box;
    margin-top: 2px;
  }

  // Render the game field at the right width
  @include game-field;

  .game-message {
    padding-top: 0;

    p {
      font-size: 30px !important;
      height: 30px !important;
      line-height: 30px !important;
      margin-top: 32% !important;
      margin-bottom: 0 !important;
    }

    .lower {
      margin-top: 10px !important;
    }
  }
}

@include keyframes(pop-in-big) {
  0% {
    @include transform(scale(0) translateZ(0));
    opacity: 0;
    margin-top: -56px;
  }

  100% {
    @include transform(scale(1) translateZ(0));
    opacity: 1;
    margin-top: 30px;
  }
}

@include keyframes(pop-in-small) {
  0% {
    @include transform(scale(0) translateZ(0));
    opacity: 0;
    margin-top: -76px;
  }

  100% {
    @include transform(scale(1) translateZ(0));
    opacity: 1;
    margin-top: 10px;
  }
}

.app-notice {
  position: relative;
  @include animation(pop-in-big 700ms ease 2s both);
  background: #edc53f;
  color: white;
  padding: 18px;
  margin-top: 30px;
  height: 56px;
  box-sizing: border-box;
  border-radius: $tile-border-radius;

  &:after {
    content: "";
    display: block;
    clear: both;
  }

  .notice-close-button {
    float: right;
    font-weight: bold;
    cursor: pointer;
    margin-left: 10px;
    opacity: 0.7;
  }

  p {
    margin-bottom: 0;
    // float: left;
  }

  &, p {
    line-height: 20px;
  }

  a {
    color: white;
  }

  @include smaller($mobile-threshold) {
    @include animation(pop-in-small 700ms ease 2s both);
    margin-top: 10px;
    height: 76px;
  }
}
